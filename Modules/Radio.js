    var win_Radio =  // –æ–ø–∏—Å–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–∫–Ω–∞ —Ä–∞–¥–∏–æ
    `<div style="display: flex; width: 550px;">
        <span style="width: 550px">
			<span style="cursor: -webkit-grab;">
				<div style="margin: 5px; width: 550;" id="links_1str">
					<button title="–°–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é" id="hideMe" style="width:50px; background: #228B22;">hide</button>
                    <button title="–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ë–∞–∑—É –∑–Ω–∞–Ω–∏–π –≤ Confluence" id="knoweledgebaseKC" class="uplinksbar onlyforkc">üìö</button>
                    <button title="–ü—Ä–æ—Å–ª—É—à–∞—Ç—å –∑–∞–ø–∏—Å—å —É—Ä–æ–∫–∞" id="lessonrecordKC" class="uplinksbar onlyforkc">üë©‚Äçüè´</button>
					<button title="–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –≤ Skyeng" id="skyhomeKC" class="uplinksbar onlyforkc">üíº</button>
				</div>
                <div style="margin: 5px; width: 550px;" id="links_butKC">
                    <button title="–û—Ç–∫—Ä—ã–≤–∞–µ—Ç Timetable" id="timetableKC" style="width:105px">TimeTable</button>
                    <button title="–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π —Å –±–∞–ª–∞–Ω—Å–æ–º —É—á–µ–Ω–∏–∫–∞" id="CalcKC" style="width:105px">–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</button>
                    <button title="–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–π, —É—Å–ª–æ–≤–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤/—Å–µ—Ä—Ç–∏–∏–∫–∞—Ç–æ–≤" id="nachislyatorKC" style="width:105px">–ù–∞—á–∏—Å–ª—è—Ç–æ—Ä</button>
                    <button title="–ê–¥–º–∏–Ω–∫–∞ —Ä–∞—Å—Å—Ä–æ—á–µ–∫" id="rassrochKC" style="width:105px">–†–∞—Å—Å—Ä–æ—á–∫–∞</button>
                    <button title="–ê–¥–º–∏–Ω–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫" id="pondpisKC" style="width:105px">–ü–æ–¥–ø–∏—Å–∫–∏</button>
                    <button title="–û—Ç–∫—Ä—ã–≤–∞–µ—Ç Omnidesk" id="omniKC" style="width:105px">Omni</button>
                    <button title="–ê–¥–º–∏–Ω–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã—Ö –∫–ª—É–±–æ–≤" id="RKKC" style="width:105px">–†–ö</button>
                    <button title="–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –ö–¶" id="shablKC" style="width:105px">–®–∞–±–ª–æ–Ω—ã</button>
                    <button title="–ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞—Ä—É—à–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞" id="narushKC" style="width:105px">–ù–∞—Ä—É—à–µ–Ω–∏–µ –ë–ü</button>
                    <button title="–£—á–µ—Ç —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ö–¶" id="grafKC" style="width:105px">–ì—Ä–∞—Ñ–∏–∫</button>
				</div>
			</span>
	</span>
</div>`;

if (localStorage.getItem('winTopRadio') == null) { // –Ω–∞—á–∞–ª–æ–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–∫–Ω–∞ —Ä–∞–¥–∏–æ (–µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω–æ —Ä–∞–Ω–µ–µ)
    localStorage.setItem('winTopRadio', '120');
    localStorage.setItem('winLeftRadio', '295');
}

let wintRadio = document.createElement('div'); // —Å–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞ —Ä–∞–¥–∏–æ
document.body.append(wintRadio);
wintRadio.style = 'min-height: 25px; min-width: 65px; background: #464451; top: ' + localStorage.getItem('winTopRadio') + 'px; left: ' + localStorage.getItem('winLeftRadio') + 'px; font-size: 14px; z-index: 20; position: fixed; border: 1px solid rgb(56, 56, 56); color: black;';
wintRadio.style.display = 'none';
wintRadio.setAttribute('id', 'AF_Radio');
wintRadio.innerHTML = win_Radio;

var listenerRadio = function (e, a) { // —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –æ–∫–Ω–∞ —Ä–∞–¥–∏–æ
    wintRadio.style.left = Number(e.clientX - myXRadio) + "px";
    wintRadio.style.top = Number(e.clientY - myYRadio) + "px";
    localStorage.setItem('winTopRadio', String(Number(e.clientY - myYRadio)));
    localStorage.setItem('winLeftRadio', String(Number(e.clientX - myXRadio)));
};

wintRadio.onmousedown = function (a) { // –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –æ–∫–Ω–∞ —Ä–∞–¥–∏–æ
    if (checkelementtype(a)) {
        window.myXRadio = a.layerX;
        window.myYRadio = a.layerY;
        document.addEventListener('mousemove', listenerRadio);
    }
}
wintRadio.onmouseup = function () { document.removeEventListener('mousemove', listenerRadio); } // –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –æ–∫–Ω–∞ —Ä–∞–¥–∏–æ   
	   
		let audioUrls = JSON.parse(localStorage.getItem("audioUrls")) || [];
        let audioNames = JSON.parse(localStorage.getItem("audioNames")) || [];

        let audioPlayer = document.getElementById("audioPlayer");
        let audioUrl = document.getElementById("audioUrl");
        let audioName = document.getElementById("audioName");
        let addAudio = document.getElementById("addAudio");
        let playAudio = document.getElementById("playAudio");
        let pauseAudio = document.getElementById("pauseAudio");
        let audioList = document.getElementById("audioList");
        let player = document.getElementById("player");
        let volume = document.getElementById("volume");

        if (localStorage.getItem("volume")) {
            player.volume = localStorage.getItem("volume");
        }

        function createAudioElement(url, name) {
            let newAudio = document.createElement("li");
            newAudio.style = "cursor:pointer";
            newAudio.setAttribute("name", "radiolist")
            let deleteBtn = document.createElement("button");
            deleteBtn.innerHTML = "‚ùå";
            deleteBtn.style = "margin: 5px; background: transparent; border: 1px solid darkslategrey; cursor:pointer; border-radius: 10px;";
            deleteBtn.setAttribute('name', 'deleteline')
            newAudio.appendChild(deleteBtn);
            newAudio.appendChild(document.createTextNode(name));
            newAudio.addEventListener("click", function () {
                player.src = url;
                player.play();
            });
            deleteBtn.addEventListener("click", function () {
                let question = confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –ø–æ–∑–∏—Ü–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞?")
                if (question) {
                    const index = audioUrls.indexOf(url);
                    audioUrls.splice(index, 1);
                    audioNames.splice(index, 1);
                    localStorage.setItem("audioUrls", JSON.stringify(audioUrls));
                    localStorage.setItem("audioNames", JSON.stringify(audioNames));
                    audioList.removeChild(newAudio);
                } else {
                    console.log("–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
                }

            });
            return newAudio;
        }

        addAudio.addEventListener("click", function () {
            let url = audioUrl.value;
            let name = audioName.value;
            audioUrls.push(url);
            audioNames.push(name);
            localStorage.setItem("audioUrls", JSON.stringify(audioUrls));
            localStorage.setItem("audioNames", JSON.stringify(audioNames));
            audioList.appendChild(createAudioElement(url, name));
            audioUrl.value = "";
            audioName.value = "";
        });

        if (audioUrls.length > 0) {
            for (let i = 0; i < audioUrls.length; i++) {
                audioList.appendChild(createAudioElement(audioUrls[i], audioNames[i]));
            }
        }

        playAudio.addEventListener("click", function () {
            player.play();
        });

        pauseAudio.addEventListener("click", function () {
            player.pause();
        });

        player.addEventListener("volumechange", function () {
            localStorage.setItem("volume", player.volume);
        });

        let audioListItems = document.querySelectorAll('[name=radiolist]');
        audioListItems.forEach(item => {
            item.addEventListener('click', function () {
                audioListItems.forEach(item => item.classList.remove('active'));
                this.classList.toggle('active');
            });
        });

        function muteorunmute() {
            if (player.muted) {
                player.muted = false;
                muteAudio.innerHTML = "üîáMute";
                localStorage.setItem("volume", audioPlayer.volume);
            } else {
                player.muted = true;
                muteAudio.innerHTML = "üì¢Unmute";
            }
        }